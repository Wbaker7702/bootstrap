---
interface Props {
  active?: boolean
  class?: string
  href: string
  rel?: HTMLAnchorElement['rel']
  target?: HTMLAnchorElement['target']
  track?: boolean
}

const { active, class: className, track, ...restProps } = Astro.props as Props

// Ensure secure defaults for external links opened in a new tab
const computeRel = (target: Props['target'], rel: Props['rel']): string | undefined => {
  const tokens = new Set<string>((rel ?? '').split(/\s+/).filter(Boolean))
  if (target === '_blank') {
    tokens.add('noopener')
    tokens.add('noreferrer')
  }
  return tokens.size > 0 ? Array.from(tokens).join(' ') : undefined
}

const { href, target, rel: relProp, ...otherProps } = restProps as {
  href: string
  target?: string
  rel?: string
}

const computedRel = computeRel(target, relProp)

const content = await Astro.slots.render('default')
---

<li class="nav-item col-6 col-lg-auto">
  <a
    aria-current={active ? true : undefined}
    class:list={['nav-link py-2 px-0 px-lg-2', className, { active }]}
    href={href}
    target={target}
    rel={computedRel}
    {...otherProps}
  >
    <slot />
  </a>
</li>
