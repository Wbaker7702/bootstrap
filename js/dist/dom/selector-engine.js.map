{"version":3,"file":"selector-engine.js","sources":["../../src/dom/selector-engine.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isDisabled, isVisible, parseSelector } from '../util/index.js'\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttribute = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttribute || (!hrefAttribute.includes('#') && !hrefAttribute.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n      hrefAttribute = `#${hrefAttribute.split('#')[1]}`\n    }\n\n    selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null\n  }\n\n  return selector ? selector.split(',').map(sel => parseSelector(sel)).join(',') : null\n}\n\n// Cache the focusable elements selector to avoid recreating it on every call\nconst focusableElementsSelector = [\n  'a',\n  'button',\n  'input',\n  'textarea',\n  'select',\n  'details',\n  '[tabindex]',\n  '[contenteditable=\"true\"]'\n].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',')\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    // Use Array.from for better performance than spread operator\n    return Array.from(Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    // Use Array.from instead of spread operator for better performance\n    return Array.from(element.children).filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n    // Start from parent and traverse up, avoiding redundant closest() calls\n    let ancestor = element.parentNode\n\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE) {\n      if (ancestor.matches(selector)) {\n        parents.push(ancestor)\n      }\n\n      ancestor = ancestor.parentNode\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  },\n\n  focusableChildren(element) {\n    return this.find(focusableElementsSelector, element).filter(el => !isDisabled(el) && isVisible(el))\n  },\n\n  getSelectorFromElement(element) {\n    const selector = getSelector(element)\n\n    if (selector) {\n      return SelectorEngine.findOne(selector) ? selector : null\n    }\n\n    return null\n  },\n\n  getElementFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.findOne(selector) : null\n  },\n\n  getMultipleElementsFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.find(selector) : []\n  }\n}\n\nexport default SelectorEngine\n"],"names":["getSelector","element","selector","getAttribute","hrefAttribute","includes","startsWith","split","trim","map","sel","parseSelector","join","focusableElementsSelector","SelectorEngine","find","document","documentElement","Array","from","Element","prototype","querySelectorAll","call","findOne","querySelector","children","filter","child","matches","parents","ancestor","parentNode","nodeType","Node","ELEMENT_NODE","push","prev","previous","previousElementSibling","next","nextElementSibling","focusableChildren","el","isDisabled","isVisible","getSelectorFromElement","getElementFromSelector","getMultipleElementsFromSelector"],"mappings":";;;;;;;;;;;EAAA;EACA;EACA;EACA;EACA;EACA;;EAIA,MAAMA,WAAW,GAAGC,OAAO,IAAI;EAC7B,EAAA,IAAIC,QAAQ,GAAGD,OAAO,CAACE,YAAY,CAAC,gBAAgB,CAAC;EAErD,EAAA,IAAI,CAACD,QAAQ,IAAIA,QAAQ,KAAK,GAAG,EAAE;EACjC,IAAA,IAAIE,aAAa,GAAGH,OAAO,CAACE,YAAY,CAAC,MAAM,CAAC;;EAEhD;EACA;EACA;EACA;EACA,IAAA,IAAI,CAACC,aAAa,IAAK,CAACA,aAAa,CAACC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACD,aAAa,CAACE,UAAU,CAAC,GAAG,CAAE,EAAE;EACtF,MAAA,OAAO,IAAI;EACb,IAAA;;EAEA;EACA,IAAA,IAAIF,aAAa,CAACC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACD,aAAa,CAACE,UAAU,CAAC,GAAG,CAAC,EAAE;QACjEF,aAAa,GAAG,CAAA,CAAA,EAAIA,aAAa,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA,CAAE;EACnD,IAAA;EAEAL,IAAAA,QAAQ,GAAGE,aAAa,IAAIA,aAAa,KAAK,GAAG,GAAGA,aAAa,CAACI,IAAI,EAAE,GAAG,IAAI;EACjF,EAAA;IAEA,OAAON,QAAQ,GAAGA,QAAQ,CAACK,KAAK,CAAC,GAAG,CAAC,CAACE,GAAG,CAACC,GAAG,IAAIC,sBAAa,CAACD,GAAG,CAAC,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI;EACvF,CAAC;;EAED;EACA,MAAMC,yBAAyB,GAAG,CAChC,GAAG,EACH,QAAQ,EACR,OAAO,EACP,UAAU,EACV,QAAQ,EACR,SAAS,EACT,YAAY,EACZ,0BAA0B,CAC3B,CAACJ,GAAG,CAACP,QAAQ,IAAI,CAAA,EAAGA,QAAQ,CAAA,qBAAA,CAAuB,CAAC,CAACU,IAAI,CAAC,GAAG,CAAC;AAE/D,QAAME,cAAc,GAAG;IACrBC,IAAIA,CAACb,QAAQ,EAAED,OAAO,GAAGe,QAAQ,CAACC,eAAe,EAAE;EACjD;EACA,IAAA,OAAOC,KAAK,CAACC,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,gBAAgB,CAACC,IAAI,CAACtB,OAAO,EAAEC,QAAQ,CAAC,CAAC;IAC/E,CAAC;IAEDsB,OAAOA,CAACtB,QAAQ,EAAED,OAAO,GAAGe,QAAQ,CAACC,eAAe,EAAE;MACpD,OAAOG,OAAO,CAACC,SAAS,CAACI,aAAa,CAACF,IAAI,CAACtB,OAAO,EAAEC,QAAQ,CAAC;IAChE,CAAC;EAEDwB,EAAAA,QAAQA,CAACzB,OAAO,EAAEC,QAAQ,EAAE;EAC1B;EACA,IAAA,OAAOgB,KAAK,CAACC,IAAI,CAAClB,OAAO,CAACyB,QAAQ,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC3B,QAAQ,CAAC,CAAC;IAC9E,CAAC;EAED4B,EAAAA,OAAOA,CAAC7B,OAAO,EAAEC,QAAQ,EAAE;MACzB,MAAM4B,OAAO,GAAG,EAAE;EAClB;EACA,IAAA,IAAIC,QAAQ,GAAG9B,OAAO,CAAC+B,UAAU;MAEjC,OAAOD,QAAQ,IAAIA,QAAQ,CAACE,QAAQ,KAAKC,IAAI,CAACC,YAAY,EAAE;EAC1D,MAAA,IAAIJ,QAAQ,CAACF,OAAO,CAAC3B,QAAQ,CAAC,EAAE;EAC9B4B,QAAAA,OAAO,CAACM,IAAI,CAACL,QAAQ,CAAC;EACxB,MAAA;QAEAA,QAAQ,GAAGA,QAAQ,CAACC,UAAU;EAChC,IAAA;EAEA,IAAA,OAAOF,OAAO;IAChB,CAAC;EAEDO,EAAAA,IAAIA,CAACpC,OAAO,EAAEC,QAAQ,EAAE;EACtB,IAAA,IAAIoC,QAAQ,GAAGrC,OAAO,CAACsC,sBAAsB;EAE7C,IAAA,OAAOD,QAAQ,EAAE;EACf,MAAA,IAAIA,QAAQ,CAACT,OAAO,CAAC3B,QAAQ,CAAC,EAAE;UAC9B,OAAO,CAACoC,QAAQ,CAAC;EACnB,MAAA;QAEAA,QAAQ,GAAGA,QAAQ,CAACC,sBAAsB;EAC5C,IAAA;EAEA,IAAA,OAAO,EAAE;IACX,CAAC;EACDC,EAAAA,IAAIA,CAACvC,OAAO,EAAEC,QAAQ,EAAE;EACtB,IAAA,IAAIsC,IAAI,GAAGvC,OAAO,CAACwC,kBAAkB;EAErC,IAAA,OAAOD,IAAI,EAAE;EACX,MAAA,IAAIA,IAAI,CAACX,OAAO,CAAC3B,QAAQ,CAAC,EAAE;UAC1B,OAAO,CAACsC,IAAI,CAAC;EACf,MAAA;QAEAA,IAAI,GAAGA,IAAI,CAACC,kBAAkB;EAChC,IAAA;EAEA,IAAA,OAAO,EAAE;IACX,CAAC;IAEDC,iBAAiBA,CAACzC,OAAO,EAAE;MACzB,OAAO,IAAI,CAACc,IAAI,CAACF,yBAAyB,EAAEZ,OAAO,CAAC,CAAC0B,MAAM,CAACgB,EAAE,IAAI,CAACC,mBAAU,CAACD,EAAE,CAAC,IAAIE,kBAAS,CAACF,EAAE,CAAC,CAAC;IACrG,CAAC;IAEDG,sBAAsBA,CAAC7C,OAAO,EAAE;EAC9B,IAAA,MAAMC,QAAQ,GAAGF,WAAW,CAACC,OAAO,CAAC;EAErC,IAAA,IAAIC,QAAQ,EAAE;QACZ,OAAOY,cAAc,CAACU,OAAO,CAACtB,QAAQ,CAAC,GAAGA,QAAQ,GAAG,IAAI;EAC3D,IAAA;EAEA,IAAA,OAAO,IAAI;IACb,CAAC;IAED6C,sBAAsBA,CAAC9C,OAAO,EAAE;EAC9B,IAAA,MAAMC,QAAQ,GAAGF,WAAW,CAACC,OAAO,CAAC;MAErC,OAAOC,QAAQ,GAAGY,cAAc,CAACU,OAAO,CAACtB,QAAQ,CAAC,GAAG,IAAI;IAC3D,CAAC;IAED8C,+BAA+BA,CAAC/C,OAAO,EAAE;EACvC,IAAA,MAAMC,QAAQ,GAAGF,WAAW,CAACC,OAAO,CAAC;MAErC,OAAOC,QAAQ,GAAGY,cAAc,CAACC,IAAI,CAACb,QAAQ,CAAC,GAAG,EAAE;EACtD,EAAA;EACF;;;;;;;;"}